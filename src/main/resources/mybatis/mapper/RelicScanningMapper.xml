<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.museum.dao.RelicScanningMapper">
  <resultMap id="BaseResultMap" type="com.example.museum.po.RelicScanningPO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="relic_id" jdbcType="BIGINT" property="relicId" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    <result column="project_time" jdbcType="VARCHAR" property="projectTime" />
    <result column="design_company" jdbcType="VARCHAR" property="designCompany" />
    <result column="repair_company" jdbcType="VARCHAR" property="repairCompany" />
    <result column="plan_name_code" jdbcType="VARCHAR" property="planNameCode" />
    <result column="company_code" jdbcType="VARCHAR" property="companyCode" />
    <result column="extract_time" jdbcType="VARCHAR" property="extractTime" />
    <result column="extract_user_name" jdbcType="VARCHAR" property="extractUserName" />
    <result column="return_time" jdbcType="VARCHAR" property="returnTime" />
    <result column="return_user_name" jdbcType="VARCHAR" property="returnUserName" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="density_lng" jdbcType="VARCHAR" property="densityLng" />
    <result column="density_lat" jdbcType="VARCHAR" property="densityLat" />
    <result column="colour_lng" jdbcType="VARCHAR" property="colourLng" />
    <result column="colour_lat" jdbcType="VARCHAR" property="colourLat" />
    <result column="fineness" jdbcType="VARCHAR" property="fineness" />
    <result column="twist" jdbcType="VARCHAR" property="twist" />
    <result column="twist_direction" jdbcType="VARCHAR" property="twistDirection" />
    <result column="relic_explain" jdbcType="LONGVARCHAR" property="relicExplain" />
    <result column="environment" jdbcType="LONGVARCHAR" property="environment" />
    <result column="protect" jdbcType="LONGVARCHAR" property="protect" />
    <result column="disease" jdbcType="LONGVARCHAR" property="disease" />
    <result column="word_path" jdbcType="VARCHAR" property="wordPath" />
    <result column="word_name" jdbcType="VARCHAR" property="wordName" />
    <result column="word_url" jdbcType="VARCHAR" property="wordUrl" />
    <result column="word_date" jdbcType="VARCHAR" property="wordDate" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="update_user_id" jdbcType="INTEGER" property="updateUserId" />
  </resultMap>

  <sql id="Base_Column_List">
    id, relic_id, project_name, project_time, design_company, repair_company, plan_name_code, company_code,
    extract_time, extract_user_name, return_time, return_user_name, remarks, density_lng, 
    density_lat, colour_lng, colour_lat, fineness, twist, twist_direction, relic_explain, environment, protect,
    disease, word_path, word_name, word_url, word_date, create_time, update_time, create_user_id, update_user_id
  </sql>

  <insert id="insertSelective" parameterType="com.example.museum.po.RelicScanningPO">
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
      SELECT
      LAST_INSERT_ID()
    </selectKey>
    insert into relic_scanning_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="relicId != null">
        relic_id,
      </if>
      <if test="projectName != null">
        project_name,
      </if>
      <if test="designCompany != null">
        design_company,
      </if>
      <if test="repairCompany != null">
        repair_company,
      </if>
      <if test="planNameCode != null">
        plan_name_code,
      </if>
      <if test="companyCode != null">
        company_code,
      </if>
      <if test="extractTime != null">
        extract_time,
      </if>
      <if test="extractUserName != null">
        extract_user_name,
      </if>
      <if test="returnTime != null">
        return_time,
      </if>
      <if test="returnUserName != null">
        return_user_name,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="densityLng != null">
        density_lng,
      </if>
      <if test="densityLat != null">
        density_lat,
      </if>
      <if test="colourLng != null">
        colour_lng,
      </if>
      <if test="colourLat != null">
        colour_lat,
      </if>
      <if test="fineness != null">
        fineness,
      </if>
      <if test="twist != null">
        twist,
      </if>
      <if test="twistDirection != null">
        twist_direction,
      </if>
      <if test="wordPath != null">
        word_path,
      </if>
      <if test="wordName != null">
        word_name,
      </if>
      <if test="wordUrl != null">
        word_url,
      </if>
      <if test="wordDate != null">
        word_date,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="projectTime != null">
        project_time,
      </if>
      <if test="relicExplain != null">
        relic_explain,
      </if>
      <if test="environment != null">
        environment,
      </if>
      <if test="protect != null">
        protect,
      </if>
      <if test="disease != null">
        disease,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="relicId != null">
        #{relicId,jdbcType=BIGINT},
      </if>
      <if test="projectName != null">
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="designCompany != null">
        #{designCompany,jdbcType=VARCHAR},
      </if>
      <if test="repairCompany != null">
        #{repairCompany,jdbcType=VARCHAR},
      </if>
      <if test="planNameCode != null">
        #{planNameCode,jdbcType=VARCHAR},
      </if>
      <if test="companyCode != null">
        #{companyCode,jdbcType=VARCHAR},
      </if>
      <if test="extractTime != null">
        #{extractTime,jdbcType=VARCHAR},
      </if>
      <if test="extractUserName != null">
        #{extractUserName,jdbcType=VARCHAR},
      </if>
      <if test="returnTime != null">
        #{returnTime,jdbcType=VARCHAR},
      </if>
      <if test="returnUserName != null">
        #{returnUserName,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="densityLng != null">
        #{densityLng,jdbcType=VARCHAR},
      </if>
      <if test="densityLat != null">
        #{densityLat,jdbcType=VARCHAR},
      </if>
      <if test="colourLng != null">
        #{colourLng,jdbcType=VARCHAR},
      </if>
      <if test="colourLat != null">
        #{colourLat,jdbcType=VARCHAR},
      </if>
      <if test="fineness != null">
        #{fineness,jdbcType=VARCHAR},
      </if>
      <if test="twist != null">
        #{twist,jdbcType=VARCHAR},
      </if>
      <if test="twistDirection != null">
        #{twistDirection,jdbcType=VARCHAR},
      </if>
      <if test="wordPath != null">
        #{wordPath,jdbcType=VARCHAR},
      </if>
      <if test="wordName != null">
        #{wordName,jdbcType=VARCHAR},
      </if>
      <if test="wordUrl != null">
        #{wordUrl,jdbcType=VARCHAR},
      </if>
      <if test="wordDate != null">
        #{wordDate,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="projectTime != null">
        #{projectTime,jdbcType=VARBINARY},
      </if>
      <if test="relicExplain != null">
        #{relicExplain,jdbcType=LONGVARCHAR},
      </if>
      <if test="environment != null">
        #{environment,jdbcType=LONGVARCHAR},
      </if>
      <if test="protect != null">
        #{protect,jdbcType=LONGVARCHAR},
      </if>
      <if test="disease != null">
        #{disease,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from relic_scanning_info
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="getRelicScanningByProjectNameAndTime" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from relic_scanning_info
    where relic_id = #{relicId,jdbcType=BIGINT}
    and project_name = #{projectName,jdbcType=VARCHAR}
    and project_time = #{projectTime,jdbcType=VARCHAR}
  </select>

  <update id="updateByPrimaryKeySelective" parameterType="com.example.museum.po.RelicScanningPO">
    update relic_scanning_info
    <set>
      <if test="relicId != null">
        relic_id = #{relicId,jdbcType=BIGINT},
      </if>
      <if test="projectName != null">
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectTime != null">
        project_time = #{projectTime,jdbcType=VARCHAR},
      </if>
      <if test="designCompany != null">
        design_company = #{designCompany,jdbcType=VARCHAR},
      </if>
      <if test="repairCompany != null">
        repair_company = #{repairCompany,jdbcType=VARCHAR},
      </if>
      <if test="planNameCode != null">
        plan_name_code = #{planNameCode,jdbcType=VARCHAR},
      </if>
      <if test="companyCode != null">
        company_code = #{companyCode,jdbcType=VARCHAR},
      </if>
      <if test="extractTime != null">
        extract_time = #{extractTime,jdbcType=VARCHAR},
      </if>
      <if test="extractUserName != null">
        extract_user_name = #{extractUserName,jdbcType=VARCHAR},
      </if>
      <if test="returnTime != null">
        return_time = #{returnTime,jdbcType=VARCHAR},
      </if>
      <if test="returnUserName != null">
        return_user_name = #{returnUserName,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="densityLng != null">
        density_lng = #{densityLng,jdbcType=VARCHAR},
      </if>
      <if test="densityLat != null">
        density_lat = #{densityLat,jdbcType=VARCHAR},
      </if>
      <if test="colourLng != null">
        colour_lng = #{colourLng,jdbcType=VARCHAR},
      </if>
      <if test="colourLat != null">
        colour_lat = #{colourLat,jdbcType=VARCHAR},
      </if>
      <if test="fineness != null">
        fineness = #{fineness,jdbcType=VARCHAR},
      </if>
      <if test="twist != null">
        twist = #{twist,jdbcType=VARCHAR},
      </if>
      <if test="twistDirection != null">
        twist_direction = #{twistDirection,jdbcType=VARCHAR},
      </if>
      <if test="wordPath != null">
        word_path = #{wordPath,jdbcType=VARCHAR},
      </if>
      <if test="wordName != null">
        word_name = #{wordName,jdbcType=VARCHAR},
      </if>
      <if test="wordUrl != null">
        word_url = #{wordUrl,jdbcType=VARCHAR},
      </if>
      <if test="wordDate != null">
        word_date = #{wordDate,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="relicExplain != null">
        relic_explain = #{relicExplain,jdbcType=LONGVARCHAR},
      </if>
      <if test="environment != null">
        environment = #{environment,jdbcType=LONGVARCHAR},
      </if>
      <if test="protect != null">
        protect = #{protect,jdbcType=LONGVARCHAR},
      </if>
      <if test="disease != null">
        disease = #{disease,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>


  <sql id="page_sql">
    <if test="param.projectName != null and param.projectName != ''">
      and project_name LIKE CONCAT('%',#{param.projectName,jdbcType=VARCHAR},'%')
    </if>
    <if test="param.projectTime != null and param.projectTime != ''">
      and project_time LIKE CONCAT('%',#{param.projectTime,jdbcType=VARCHAR},'%')
    </if>
    <if test="param.designCompany != null and param.designCompany != ''">
      and design_company LIKE CONCAT('%',#{param.designCompany,jdbcType=VARCHAR},'%')
    </if>
    <if test="param.repairCompany != null and param.repairCompany != ''">
      and repair_company LIKE CONCAT('%',#{param.repairCompany,jdbcType=VARCHAR},'%')
    </if>
    <if test="param.planNameCode != null and param.planNameCode != ''">
      and plan_name_code LIKE CONCAT('%',#{param.planNameCode,jdbcType=VARCHAR},'%')
    </if>
    <if test="param.companyCode != null and param.companyCode != ''">
      and company_code LIKE CONCAT('%',#{param.companyCode,jdbcType=VARCHAR},'%')
    </if>
    <if test="param.extractTime != null and param.extractTime != ''">
      extract_time LIKE CONCAT('%',#{param.extractTime,jdbcType=VARCHAR},'%')
    </if>
    <if test="param.extractUserName != null and param.extractUserName != ''">
      and extract_user_name LIKE CONCAT('%',#{param.extractUserName,jdbcType=VARCHAR},'%')
    </if>
    <if test="param.returnTime != null and param.returnTime != ''">
      and return_time LIKE CONCAT('%',#{param.returnTime,jdbcType=VARCHAR},'%')
    </if>
    <if test="param.returnUserName != null and param.returnUserName != ''">
      and return_user_name LIKE CONCAT('%',#{param.returnUserName,jdbcType=VARCHAR},'%')
    </if>
  </sql>

  <select id="listCount" resultType="int">
    select count(1)
    from relic_scanning_info
    WHERE relic_id = #{param.relicId,jdbcType=BIGINT}
    <include refid="page_sql"/>
  </select>

  <select id="pageList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from relic_scanning_info
    WHERE relic_id = #{param.relicId,jdbcType=BIGINT}
    <include refid="page_sql"/>
    order by id desc
    LIMIT #{page.limitOneValue},#{page.pageSize}
  </select>
</mapper>