<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.museum.dao.RelicStockDetailedMapper">

    <resultMap id="BaseResultMap" type="com.example.museum.po.RelicStockDetailedPO">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="relic_id" jdbcType="BIGINT" property="relicId"/>
        <result column="relic_name" jdbcType="VARCHAR" property="relicName"/>
        <result column="relic_no" jdbcType="VARCHAR" property="relicNo"/>
        <result column="relic_stock_id" jdbcType="BIGINT" property="relicStockId"/>
        <result column="out_time" jdbcType="VARCHAR" property="outTime"/>
        <result column="enter_time" jdbcType="VARCHAR" property="enterTime"/>
        <result column="reason" jdbcType="VARCHAR" property="reason"/>
        <result column="remarks" jdbcType="VARCHAR" property="remarks"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="update_user_id" jdbcType="INTEGER" property="updateUserId"/>
        <result column="update_user_name" jdbcType="VARCHAR" property="updateUserName"/>
        <result column="delete_flag" jdbcType="TINYINT" property="deleteFlag"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, relic_id, relic_name, relic_no, relic_stock_id, out_time, enter_time, reason, remarks, user_id, user_name,
    update_user_id, update_user_name, delete_flag, status, create_time, modify_time
  </sql>

    <insert id="save" parameterType="com.example.museum.po.RelicStockDetailedPO">
        insert into relic_stock_detailed_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="relicId != null">
                relic_id,
            </if>
            <if test="relicName != null">
                relic_name,
            </if>
            <if test="relicNo != null">
                relic_no,
            </if>
            <if test="relicStockId != null">
                relic_stock_id,
            </if>
            <if test="outTime != null">
                out_time,
            </if>
            <if test="enterTime != null">
                enter_time,
            </if>
            <if test="reason != null">
                reason,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="updateUserId != null">
                update_user_id,
            </if>
            <if test="updateUserName != null">
                update_user_name,
            </if>
            <if test="deleteFlag != null">
                delete_flag,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="modifyTime != null">
                modify_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="relicId != null">
                #{relicId,jdbcType=BIGINT},
            </if>
            <if test="relicName != null">
                #{relicName,jdbcType=VARCHAR},
            </if>
            <if test="relicNo != null">
                #{relicNo,jdbcType=VARCHAR},
            </if>
            <if test="relicStockId != null">
                #{relicStockId,jdbcType=BIGINT},
            </if>
            <if test="outTime != null">
                #{outTime,jdbcType=VARCHAR},
            </if>
            <if test="enterTime != null">
                #{enterTime,jdbcType=VARCHAR},
            </if>
            <if test="reason != null">
                #{reason,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
                #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="updateUserId != null">
                #{updateUserId,jdbcType=INTEGER},
            </if>
            <if test="updateUserName != null">
                #{updateUserName,jdbcType=VARCHAR},
            </if>
            <if test="deleteFlag != null">
                #{deleteFlag,jdbcType=TINYINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                #{modifyTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <select id="getById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from relic_stock_detailed_info
        where id = #{id,jdbcType=BIGINT}
    </select>

    <update id="delete" parameterType="java.lang.Long">
    update relic_stock_detailed_info
    set delete_flag = 1
    where id = #{id,jdbcType=BIGINT}
  </update>

    <update id="setOutStockAll" parameterType="java.lang.Long">
    update relic_stock_detailed_info
    set out_time = #{outTime}, user_id = #{userId}, user_name = #{userName},
    status = #{status}, modify_time = SYSDATE()
    where status = 0 and relic_stock_id = #{relicStockId,jdbcType=BIGINT}
  </update>

    <update id="setOutStockStatus" parameterType="java.lang.Long">
        update relic_stock_detailed_info
        set out_time = #{outTime}, user_id = #{userId}, user_name = #{userName},
        status = #{status}, modify_time = SYSDATE()
        where status = 0 and id in
        <foreach collection="ids" open="(" close=")" item="id" separator=",">
            #{id}
        </foreach>
    </update>

    <update id="setEnterStockAll">
        update relic_stock_detailed_info
        <set>
            enter_time = #{enterTime,jdbcType=VARCHAR},
            update_user_id = #{updateUserId,jdbcType=INTEGER},
            update_user_name = #{updateUserName,jdbcType=VARCHAR},
            status = #{status,jdbcType=TINYINT},
            modify_time = SYSDATE(),
            <if test="reason != null">
                reason = #{reason,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
        </set>
        where status = 1 and relic_stock_id = #{relicStockId,jdbcType=BIGINT}
    </update>

    <update id="setEnterStockStatus">
        update relic_stock_detailed_info
        <set>
            enter_time = #{enterTime,jdbcType=VARCHAR},
            update_user_id = #{updateUserId,jdbcType=INTEGER},
            update_user_name = #{updateUserName,jdbcType=VARCHAR},
            status = #{status,jdbcType=TINYINT},
            modify_time = SYSDATE(),
            <if test="reason != null">
                reason = #{reason,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
        </set>
        where status = 1 and id in
        <foreach collection="ids" open="(" close=")" item="id" separator=",">
            #{id}
        </foreach>
    </update>

    <sql id="page_sql">
        <if test="param.relicStockId != null">
            and t.relic_stock_id = #{param.relicStockId,jdbcType=BIGINT}
        </if>
        <if test="param.relicName != null and param.relicName != ''">
            and t.relic_name LIKE CONCAT('%',#{param.relicName},'%')
        </if>
        <if test="param.relicNo != null and param.relicNo != ''">
            and t.relic_no LIKE CONCAT('%',#{param.relicNo},'%')
        </if>
    </sql>

    <select id="listCount" resultType="int">
        select count(1)
        from relic_stock_detailed_info t
        WHERE t.delete_flag = 0
        <include refid="page_sql"/>
    </select>

    <select id="pageList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from relic_stock_detailed_info t
        WHERE t.delete_flag = 0
        <include refid="page_sql"/>
        order by t.create_time desc
        LIMIT #{page.limitOneValue},#{page.pageSize}
    </select>

    <select id="relicStockList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from relic_stock_detailed_info t
        WHERE t.delete_flag = 0
        and t.relic_stock_id = #{relicStockId,jdbcType=BIGINT}
    </select>
</mapper>