<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.museum.dao.RelicStockMapper">

  <resultMap id="BaseResultMap" type="com.example.museum.po.RelicStockPO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="stay_stock_num" jdbcType="INTEGER" property="stayStockNum" />
    <result column="out_stock_num" jdbcType="INTEGER" property="outStockNum" />
    <result column="enter_stock_num" jdbcType="INTEGER" property="enterStockNum" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>

  <sql id="Base_Column_List">
    id, user_id, user_name, stay_stock_num, out_stock_num, enter_stock_num, create_time
  </sql>

  <select id="getById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from relic_stock_info
    where id = #{id,jdbcType=BIGINT}
  </select>

  <insert id="save" parameterType="com.example.museum.po.RelicStockPO">
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
      SELECT
      LAST_INSERT_ID()
    </selectKey>
    insert into relic_stock_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="stayStockNum != null">
        stay_stock_num,
      </if>
      <if test="outStockNum != null">
        out_stock_num,
      </if>
      <if test="enterStockNum != null">
        enter_stock_num,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="stayStockNum != null">
        #{stayStockNum,jdbcType=INTEGER},
      </if>
      <if test="outStockNum != null">
        #{outStockNum,jdbcType=INTEGER},
      </if>
      <if test="enterStockNum != null">
        #{enterStockNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <update id="setStayStockNum">
    update relic_stock_info
    set stay_stock_num = stay_stock_num - #{num,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="setOutStockNum">
    update relic_stock_info
    set out_stock_num = out_stock_num + #{num,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="setEnterStockNum">
    update relic_stock_info
    set enter_stock_num = enter_stock_num + #{num,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <sql id="page_sql">
    <if test="startTime != null and startTime != ''">
      and t.create_time >= #{startTime}
    </if>
    <if test="endTime != null and endTime != ''">
      and #{endTime} >= t.create_time
    </if>
  </sql>

  <select id="listCount" resultType="int">
    select count(1)
    from relic_stock_info t
    WHERE 1 = 1
    <include refid="page_sql"/>
  </select>

  <select id="pageList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from relic_stock_info t
    WHERE 1 = 1
    <include refid="page_sql"/>
    order by t.create_time desc
    LIMIT #{page.limitOneValue},#{page.pageSize}
  </select>
</mapper>